# exploration with total population

2000, 2010, 2020 from tidycensus; 1990 from IPUMS data

File: exploration.qmd

```{r}
#| label: setup
#| echo: false
#| warning: false

source("./scripts/my-setup.R")

my_caption <- "Source: US Census; plot: Daniel Moul"

```

```{r}
#| eval: false

#census_api_key("ADD YOUR KEY HERE", install = TRUE) # already done

# get variable lists (and determine which data sets are available)

# v90_sf1 <- load_variables(1990, "sf1", cache = TRUE)
# Error: The 1990 decennial Census endpoint has been removed by the Census Bureau. We will support 1990 data again when the endpoint is updated; in the meantime, we recommend using NHGIS (https://nhgis.org) and the ipumsr R package.

# v90_sf2 <- load_variables(1990, "sf2", cache = TRUE)
# v90_sf3 <- load_variables(1990, "sf3", cache = TRUE)
# v90_sf4 <- load_variables(1990, "sf4", cache = TRUE)

v00_sf1 <- load_variables(2000, "sf1", cache = TRUE)
v00_sf2 <- load_variables(2000, "sf2", cache = TRUE)
v00_sf3 <- load_variables(2000, "sf3", cache = TRUE)
v00_sf4 <- load_variables(2000, "sf4", cache = TRUE)

v10_sf1 <- load_variables(2010, "sf1", cache = TRUE)
v10_sf2 <- load_variables(2010, "sf2", cache = TRUE)
#v10_sf3 <- load_variables(2010, "sf2", cache = TRUE) # error: not released

# v20_sf1 <- load_variables(2020, "sf1", cache = TRUE)
# Error: API endpoint not found. Does this data set exist for the specified year? See https://api.census.gov/data.html for data availability.
# v20_sf2 <- load_variables(2020, "sf2", cache = TRUE)

```

Which do I want/need?

```
load_variables(
  year,
  dataset = c("sf1", "sf2", "sf3", "sf4", "pl", "as", "gu", "mp", "vi", "acs1", "acs3",
    "acs5", "acs1/profile", "acs3/profile", "acs5/profile", "acs1/subject",
    "acs3/subject", "acs5/subject", "acs1/cprofile", "acs5/cprofile"),
  cache = FALSE
)
```

# Let's get some data

## IPUMS

https://www.ipums.org

https://www.ipums.org/projects/ipums-usa

https://www.nhgis.org/data-documentation

https://data2.nhgis.org/downloads

Research using NHGIS data should cite it as:

Steven Manson, Jonathan Schroeder, David Van Riper, Tracy Kugler, and Steven Ruggles. IPUMS National Historical Geographic Information System: Version 17.0 [dataset]. Minneapolis, MN: IPUMS. 2022. http://doi.org/10.18128/D050.V17.0

For policy briefs or articles in the popular press, we recommend that you cite the use of NHGIS data as follows:

IPUMS NHGIS, University of Minnesota, www.nhgis.org

```{r}
d1990_pop <- read_csv("./data/ipums/nhgis0003_csv/nhgis0003_ds231_1990_county.csv") |>
  filter(STATE == "North Carolina") |>
  janitor::clean_names() |>
  mutate(geoid = str_extract(gisjoin, "(?<=G)\\d{6}"),
         geoid = str_replace(geoid, "370", "37")) |>
  select(geoid, county, pop = agwd001, year)

```

```{r}

d2000_tmp <- get_decennial(geography = c("county"), 
                              variables = c(pop = "P001001"),
                              sumfile = "sf1",
                              state = "NC",
                              year = 2000,
                              geometry = TRUE,
                              output = "wide"
        ) |>
  clean_names() 

nc_county_boundaries <- d2000_tmp |>
  select(-name, pop)

d2000_pop <- d2000_tmp |>
  st_drop_geometry() |>
  mutate(name = str_extract(name, "[A-z]+"),
         year = 2000) |>
  rename(county = name)

# d2000_pop_acs <- get_acs(geography = c("county"), 
#                      variables = c(pop = "B01003_001E",
#                                    #pop_annotation = "B01003_001EA",
#                                    pop_moe = "B01003_001M"#,   # moe not useful; delete later
#                                    #pop_moe_annotation = "B01003_001MA"
#                                    ),
#                      #sumfile = "acs1",
#                      state = "NC",
#                      year = 2000,
#                      geometry = FALSE,
#                      output = "wide"
# )
# Getting data from the 1996-2000 5-year ACS
# Error: 5-year ACS support in tidycensus begins with the 2005-2009 5-year ACS. Consider using decennial Census data instead.

# can't use year = c(2000, 2010): 
# Getting data from the 2010 decennial Census
# Warning: 'length(x) = 2 > 1' in coercion to 'logical(1)'Warning: 'length(x) = 2 > 1' in coercion to 'logical(1)'Error in if (year == 1990) { : the condition has length > 1

d2010_pop <- get_decennial(geography = c("county"), 
                           variables = c(pop = "P001001"),
                           sumfile = "sf1",
                           state = "NC",
                           year = 2010,
                           geometry = FALSE,
                           output = "wide"
) |>
  clean_names() |>
  mutate(name = str_extract(name, "[A-z]+"),
                year = 2010) |>
  rename(county = name)

# d2010_pop_acs <- get_acs(geography = c("county"), 
#                      variables = c(pop = "B01003_001E",
#                                    #pop_annotation = "B01003_001EA",
#                                    pop_moe = "B01003_001M"#,   # moe not useful; delete later
#                                    #pop_moe_annotation = "B01003_001MA"
#                                    ),
#                      #sumfile = "acs1",
#                      state = "NC",
#                      year = 2010,
#                      geometry = FALSE,
#                      output = "wide"
# ) |>
#   clean_names() |>
#   rename(county = name)

d2020_pop <- get_decennial(geography = c("county"), 
                           #variables = c(pop = "P001001"),
                           variables = c(pop = "P1_001N"),
                           #sumfile = "pl",
                           state = "NC",
                           year = 2020,
                           geometry = FALSE,
                           output = "wide"
) |>
  clean_names() |>
  mutate(name = str_extract(name, "[A-z]+"),
         year = 2020) |>
  rename(county = name)

# d2020_pop_acs <- get_acs(geography = c("county"), 
#                      variables = c(pop = "B01003_001E",
#                                    #pop_annotation = "B01003_001EA",
#                                    pop_moe = "B01003_001M"#,   # moe not useful; delete later
#                                    #pop_moe_annotation = "B01003_001MA"
#                                    ),
#                      #sumfile = "acs1",
#                      state = "NC",
#                      year = 2020,
#                      geometry = FALSE,
#                      output = "wide"
# ) |>
#   clean_names() |>
  # rename(county = name)

```

```{r}
d_pop_long <- bind_rows(
  d1990_pop,
  d2000_pop,
  d2010_pop,
  d2020_pop,
)

# TODO fix this
d_pop_growth_wide <- 
  left_join(d1990_pop |> rename(pop_1990 = pop) |> select(-year),
            d2000_pop |> rename(pop_2000 = pop) |> select(-year),
            by = c("geoid", "county")) |> #, 
  left_join(d2010_pop |> rename(pop_2010 = pop) |> select(-year),
            by = c("geoid", "county")) |>
  left_join(d2020_pop |> rename(pop_2020 = pop) |> select(-year),
            by = c("geoid", "county")) |>
  # mutate(county = str_extract(county, "[A-z]+")) |>
  mutate(pct_growth_2000 = pop_2000 / pop_1990 - 1,
         pct_growth_2010 = pop_2010 / pop_2000 - 1,
         pct_growth_2020 = pop_2020 / pop_2010 - 1)

d_pop_growth_long <- d_pop_growth_wide |>
  pivot_longer(cols = starts_with("pct_growth_"),
               names_to = "year",
               names_pattern = "pct_growth_(.+)",
               values_to = "pct_growth"
               )
  
```


```{r}
#| label: fig-nc-counties-1
#| fig-cap: "First figure"
#| fig-height: 8
#| column: screen-inset-right

d_pop_long |>
  mutate(county = fct_reorder(county, pop, max),
         year = factor(year)) |>
  ggplot(aes(pop, county, color = year)) +
  geom_point(size = 1) +
  scale_x_log10(labels = label_number(scale_cut = cut_short_scale())) +
  scale_colour_viridis_d(end = 0.85) +
  theme(panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank()) +
  labs(
    x = "Population (log10 scale)",
    y = NULL,
  )

```

```{r}
#| eval: false
#| label: fig-nc-counties-2
#| fig-cap: "Second figure"
#| column: screen-inset-right

xx <- d_pop_growth_long |>
  mutate(name = fct_reorder(name, pop_2020),
         year = factor(year)) |>
  mutate(name_label = as.character(name),
         name_order = as.integer(name),
         positive_growth = pct_growth > 0)

# nc_counties <- as.character(sort(unique(xx$name)))
# nc_counties_row <- 1:length(nc_counties)

xx |>
  ggplot(aes(x = year, xend = year, y = name_order, yend = name_order + pct_growth, color = positive_growth)) +
  geom_segment(size = 1) +
  #scale_x_log10(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_continuous(breaks = xx$name_order,
                     labels = xx$name_label) +
  theme(panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank()) +
  labs(
    #x = "Population (log10 scale)",
    y = NULL,
  )


```


```{r}
#| label: fig-nc-counties-3
#| fig-cap: "Third figure"
#| fig-width: 10
#| out-width: "100%"
#| column: screen-inset-right

xx <- d_pop_growth_long |>
  mutate(county = fct_reorder(county, pop_2020), # TODO: pick a better way to order the names
         year = factor(year)) |>
  mutate(name_label = as.character(county),
         name_order = as.integer(county),
         positive_growth = pct_growth > 0)

xx |>
  ggplot(aes(county, pct_growth, color = positive_growth, fill = positive_growth)) +
  geom_vline(xintercept = levels(xx$county)[c(1:19) * 5], size = 0.25, alpha = 0.2) +
  geom_col(size = 1) +
  #scale_x_log10(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_continuous(labels = percent_format()) +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.x = element_text(size = 6, angle = 45, hjust = 1),
        legend.position = "none") +
  facet_wrap( ~ year, nrow = 3) +
  labs(
    title = "Population growth in NC counties over 10-year periods",
    subtitle = "Ordered from smallest to largest population in ACS 2020",
    x = NULL,
    y = NULL,
  )
```

Generally true that the counties with larger population grew; those with smaller, shrank.

Grow rate slowed a lot in the 10 years to 2020 (if ACS 2020 is comparable to 2010 decennial)

```{r}
#| label: fig-nc-counties-4
#| fig-cap: "Fourth figure"
#| #| fig-width: 8
#| column: screen-inset-right

xx |>
  ggplot(aes(pop_2020, pct_growth)) + #, fill = positive_growth
  geom_hline(yintercept = 0, lty = 2, alpha = 0.5) +
  geom_point(aes(color = positive_growth), size = 1) +
  scale_x_log10(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_continuous(labels = percent_format()) +
  geom_smooth(method = "lm", se = FALSE) +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        #axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none") +
  facet_wrap( ~ year, ncol = 3) +
  labs(
    title = "Larger NC counties are growing faster",
    subtitle = glue("US Census total population - growth since last decennial census",
                    "\n2020 numbers from ACS"),
    x = "Population (log10 scale)",
    y = "Growth rate",
    caption = my_caption
  )

```


```{r}
#| label: fig-nc-counties-5
#| fig-cap: "Fifth figure"
#| column: screen-inset-right

d_pop_growth_wide |>
  mutate(positive_growth_2010 = pct_growth_2010 > 0,
         positive_growth_2020 = pct_growth_2020 > 0) |>
  ggplot() +
  geom_hline(yintercept = 0, lty = 2, alpha = 0.5) +
  geom_segment(aes(x = pop_2000, xend = pop_2010, y = pct_growth_2000, yend = pct_growth_2010, color = positive_growth_2010),
               arrow = arrow(length = unit(1, "mm"), type = "closed")) +
  geom_segment(aes(x = pop_2010, xend = pop_2020, y = pct_growth_2010, yend = pct_growth_2020, color = positive_growth_2020),
               arrow = arrow(length = unit(1, "mm"), type = "closed")) +
  geom_text(aes(x = pop_2000, y = pct_growth_2000, label = county), 
            check_overlap = TRUE, size = 2, hjust = 0) +
  scale_x_log10(labels = label_number(scale_cut = cut_short_scale())) +
  scale_y_continuous(labels = percent_format()) +
  # geom_smooth(method = "lm", se = FALSE) +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        #axis.text.x = element_text(angle = 45, hjust = 1),
        legend.position = "none") +
  #facet_wrap( ~ year, ncol = 2) +
  labs(
    title = "Larger NC counties are growing faster",
    subtitle = glue("US Census total population - growth since last decennial census",
                    "\n2020 numbers from ACS"),
    x = "Population (log10 scale)",
    y = "Growth rate",
    caption = my_caption
  )
```

The growth rates 2010-2020 are a lot smaller. How much of this is real vs a difference due to using tne decennial for 2000 and 2010 while using the ACS for 2020? I cannot imagine the differnt sources have this much difference in their bias. Perhaps I didn't select an equivalent ACS variable?

The above graph would be more interesting if I had pct_growth_2000 (or thought of something else to use as the Y coordinate). Currently I'm using pct_growth_2010 for y and yend for the firs segment


Differences in growth rates over the two periods

```{r}
#| label: fig-nc-counties-6
#| fig-cap: "Sixth figure"
#| fig-width: 10
#| out-width: "100%"
#| column: screen-inset-right

xx_for_plot <- d_pop_growth_wide |>
  mutate(positive_growth_2010 = pct_growth_2010 > 0,
         positive_growth_2020 = pct_growth_2020 > 0,
         dif_growth_2020_2010 = pct_growth_2020 - pct_growth_2010,
         name = fct_reorder(county, pop_2020)) 

xx_for_plot |>
  ggplot(aes(name, dif_growth_2020_2010, fill = positive_growth_2020)) + #color = positive_growth_2020, 
  geom_vline(xintercept = levels(xx_for_plot$name)[c(1:19) * 5], size = 0.25, alpha = 0.2) +
  geom_col(size = 1) +
  scale_y_continuous(labels = percent_format()) +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.text.x = element_text(size = 6, angle = 45, hjust = 1),
        legend.position = "none") +
  labs(
    title = "Difference in population *growth rate* in NC counties 2020 compared to 2010",
    subtitle = "Ordered from smallest to largest population in ACS 2020",
    x = NULL,
    y = NULL,
  )

```


```{r}

# how best to get pop in categories 0 - 17, 18 - 65, 65+
# in 2020 sf2 can get male pop for each year and same for female and add them.
# Seems like there should be summaries already calculated and available for download

```

```{r}
#| eval: false

# tidycensus now supports the 2020 decennial Census PL-94171 redistricting data. Use year = 2020 in a call to get_decennial() to access the data, and load_variables(2020, "pl") to look up variable IDs.

v2020_pl <- load_variables(2020, "pl")

d2020_pop_pl <- get_decennial(geography = c("county"), 
                           #variables = c(pop = "P001001"),
                           variables = c(pop = "P1_001N"),
                           #sumfile = "pl",
                           state = "NC",
                           year = 2020,
                           geometry = FALSE,
                           output = "wide"
)
```




